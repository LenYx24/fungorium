METHOD Move(destination)
    neighbours := tecton.IsNeighbourOf(destination)
    hasGrownShroomThreadTo := tecton.HasGrownShroomThreadTo(destination)

    IF neighbours AND hasGrownShroomThreadTo AND canMove THEN
        tecton.RemoveBug(this)
        destination.AddBug(this)
        tecton := destination

        RETURN TRUE
    ELSE
        RETURN FALSE
    END IF

END METHOD

METHOD Eat(spore)
    isOnSameTecton := tecton == spore.GetTecton()

    IF isOnSameTecton THEN
        spore.EatenBy(this)
        RETURN TRUE
    ELSE
        RETURN FALSE
    END IF

END METHOD

METHOD CutThread(thread)
    enough := actCatalog.HasEnoughPoints(cutThreadCost)
    reachable := thread.IsTectonReachable(tecton)

    IF canCut AND reachable THEN
        thread.Remove()
        actCatalog.DecreasePoints(cutThreadCost)
        RETURN TRUE
    ELSE
        RETURN FALSE
    END IF

END METHOD

METHOD UpdateBug()
    LoadDefaultCosts()
    actCatalog.ResetPoints()

    FOR EACH bugEffect IN bugEffects DO
        bugEffect.ApplyOn(this)
    END FOR

END METHOD

METHOD LoadDefaultCosts()
    moveCost := 1
    eatCost := 2
    cutcost := 2
END METHOD